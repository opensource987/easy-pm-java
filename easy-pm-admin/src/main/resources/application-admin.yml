# 开发环境配置
server:
    # 服务器的HTTP端口，默认为8080
    port: 8080
    servlet:
        # 应用的访问路径
        context-path: /
    undertow:
        # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
        io-threads: 8
        # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
        worker-threads: 256
        # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
        # 每块buffer的空间大小,越小的空间被利用越充分
        buffer-size: 512
        # 是否分配的直接内存
        direct-buffers: true

# 日志配置
logging:
    level:
        com.mdframework: debug
        org.springframework: warn

logback:
    logdir: log
    logname: admin

# Spring配置
spring:
    # 资源信息
    messages:
        # 国际化资源文件路径
        basename: i18n/messages
    # 文件上传
    servlet:
        multipart:
            # 单个文件大小
            max-file-size:  10MB
            # 设置总上传的文件大小
            max-request-size:  20MB
    # 服务模块
    devtools:
        restart:
            # 热部署开关
            enabled: true
    datasource:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        druid:
            # 主库数据源
            master:
                url: jdbc:mysql://127.0.0.1:3306/easy-pm-basic?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&autoReconnect=true
                username: root
                password: 123456
            # 从库数据源
            slave:
                # 从数据源开关/默认关闭
                enabled: false
                url:
                username:
                password:
            # 初始连接数
            initialSize: 5
            # 最小连接池数量
            minIdle: 10
            # 最大连接池数量
            maxActive: 20
            # 配置获取连接等待超时的时间
            maxWait: 60000
            # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            timeBetweenEvictionRunsMillis: 60000
            # 配置一个连接在池中最小生存的时间，单位是毫秒
            minEvictableIdleTimeMillis: 300000
            # 配置一个连接在池中最大生存的时间，单位是毫秒
            maxEvictableIdleTimeMillis: 900000
            # 配置检测连接是否有效
            validationQuery: SELECT 1 FROM DUAL
            testWhileIdle: true
            testOnBorrow: false
            testOnReturn: false
            webStatFilter:
                enabled: true
            statViewServlet:
                enabled: true
                # 设置白名单，不填则允许所有访问
                allow:
                url-pattern: /druid/*
                # 控制台管理用户名和密码
                login-username:
                login-password:
            filter:
                stat:
                    enabled: true
                    # 慢SQL记录
                    log-slow-sql: true
                    slow-sql-millis: 1000
                    merge-sql: true
                wall:
                    config:
                        multi-statement-allow: true
    # redis 配置
    redis:
        # 地址
        host: 127.0.0.1
        # 端口，默认为6379
        port: 6379
        # 密码
        password:
        # 连接超时时间
        timeout: 10s
        lettuce:
            pool:
                # 连接池中的最小空闲连接
                min-idle: 0
                # 连接池中的最大空闲连接
                max-idle: 8
                # 连接池的最大数据库连接数
                max-active: 8
                # #连接池最大阻塞等待时间（使用负值表示没有限制）
                max-wait: -1ms

# token配置
token:
    # 令牌自定义标识
    header: Authorization
    # 令牌密钥
    secret: mdxxxxfyzbbaahhiijjaaooqwe
    # 令牌有效期（默认30分钟）
    expireTime: 30

# MyBatis配置
mybatis-plus:
    mapper-locations: classpath*:mapper/**/*Mapper.xml
    #实体扫描，多个package用逗号或者分号分隔
    typeAliasesPackage: com.mdframework.**.domain
    configuration:
        map-underscore-to-camel-case: true
        cache-enabled: true
    global-config:
        banner: false
        #刷新mapper 调试神器
        refresh: true
        db-config:
            # 主键生成策略
            # auto：数据库ID自增
            # input: 用户自行输入
            # id_worker: 分布式全局唯一ID 长整型类型
            # id_worker_str: 分布式全局唯一ID 字符串类型
            # uuid: 32 位UUID 字符串
            # none: 无状态
            id-type: auto
            #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
            field-strategy: not_empty
            #驼峰下划线转换
            db-column-underline: true
            #数据库大写下划线转换
            #capital-mode: true
            #序列接口实现类配置
            #key-generator: com.baomidou.springboot.xxx
            #逻辑删除配置
            logic-delete-value: 1
            logic-not-delete-value: 0
            #数据库类型
            db-type: mysql
        #自定义SQL注入器
        #sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
        #自定义填充策略接口实现
        #meta-object-handler: com.baomidou.springboot.xxx

# PageHelper分页插件
pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql

# Swagger配置
swagger:
    # 是否开启swagger
    enabled: true
    # 请求前缀
    pathMapping:



# 防止XSS攻击
xss:
    # 过滤开关
    enabled: true
    # 排除链接（多个用逗号分隔）
    excludes: /system/notice/*
    # 匹配链接
    urlPatterns: /system/*,/monitor/*,/tool/*

# 项目相关配置
mdframework:
  # 名称
  name: opensource
  # 版本
  version: 1.0.0
  # 版权年份
  copyrightYear: 2020
  # 实例演示开关
  demoEnabled: true
  # 文件路径,使用jvm系统变量,兼容windows和linux; 部署后与rancher容器路径配置一致
  profile: /data/upload-dir
  #图片前缀访问路径
  prePath: http://admin.stahu.cn
  # 获取ip地址开关
  addressEnabled: false
  # 验证码类型 math 数组计算 char 字符验证
  captchaType: math


